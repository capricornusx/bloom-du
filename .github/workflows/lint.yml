name: lint and build
on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'

permissions:
  contents: read
  pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: self-hosted
    strategy:
      matrix:
        go-version: [ 1.23.1 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: golangci-lint command line arguments.
          #args:
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

      - name: Download Go modules
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Test
        run: CGO_ENABLED=1 go test -v -race ./... -covermode=atomic -coverprofile=coverage.out
#        run: go test ./...
        # run: CGO_ENABLED=1 GOEXPERIMENT=loopvar go test -race ./...

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release/'
        env:
          token: ${{ secrets.CODECOV_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COMMIT_SHA: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        with:
          files: ./coverage.out
          flags: unittests
          fail_ci_if_error: true
          verbose: true
